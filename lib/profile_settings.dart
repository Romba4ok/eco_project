import 'package:Eco/appSizes.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

class ProfileSettings {
  void showSuccessDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return Dialog(
          backgroundColor: Color(0xFF1E1E1E),
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
          child: Padding(
            padding: EdgeInsets.all(20),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                Icon(Icons.check_circle_outline, color: Color(0xFF68E30B), size: AppSizes.width * 0.5), // ‚úÖ –ò–∫–æ–Ω–∫–∞ —É—Å–ø–µ—Ö–∞
                SizedBox(height: AppSizes.height * 0.02),
                Text(
                  "–ñ–∞–ª–æ–±–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                  style: TextStyle(color: Colors.white, fontSize: AppSizes.width * 0.04, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.center,
                ),
                SizedBox(height: AppSizes.height * 0.05),
                ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Color(0xFF414141), // –°–µ—Ä—ã–π —Ü–≤–µ—Ç –∫–Ω–æ–ø–∫–∏
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(8),
                    ),
                  ),
                  onPressed: () {
                    Navigator.pop(context); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
                  },
                  child: Text("–ù–∞–∑–∞–¥", style: TextStyle(color: Colors.white, fontSize: AppSizes.width * 0.05)),
                ),
              ],
            ),
          ),
        );
      },
    );
  }

  void showSupportDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return Dialog(
          backgroundColor: Color(0xFF1E1E1E),
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
          child: Padding(
            padding: EdgeInsets.all(16),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ + –ó–∞–≥–æ–ª–æ–≤–æ–∫
                Row(
                  children: [
                    GestureDetector(
                      onTap: () => Navigator.pop(context),
                      child: Icon(Icons.arrow_back, color: Colors.white),
                    ),
                    SizedBox(width: AppSizes.width * 0.08),
                    Text(
                      "–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
                      style: TextStyle(color: Colors.white, fontSize: AppSizes.width * 0.05, fontWeight: FontWeight.bold),
                    ),
                  ],
                ),
                SizedBox(height: AppSizes.height * 0.03),

                // –û–ø–∏—Å–∞–Ω–∏–µ
                Text(
                  "–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞, –ø—Ä–æ—Å–∏–º –ø–∏—Å–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–≤–µ–∂–ª–∏–≤–æ, —É–º–µ—Å—Ç–Ω–æ) :)",
                  style: TextStyle(color: Colors.grey, fontSize: AppSizes.width * 0.04),
                ),
                SizedBox(height: AppSizes.height * 0.04),

                // –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                _buildContactItem(context, "site: ecoalmaty"),
                _buildContactItem(context, "inst: Hellstreakss"),
                _buildContactItem(context, "—Ç–µ–ª: 8 707 343 5897"),
                _buildContactItem(context, "2 —Ç–µ–ª: 8 700 400 5144"),
              ],
            ),
          ),
        );
      },
    );
  }

// üîπ –í–∏–¥–∂–µ—Ç –¥–ª—è —Å—Ç—Ä–æ–∫–∏ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –∏ –∏–∫–æ–Ω–∫–æ–π –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
  Widget _buildContactItem(BuildContext context, String text) {
    return Padding(
      padding: EdgeInsets.only(bottom: 8),
      child: Container(
        decoration: BoxDecoration(
          color: Color(0xFF323232),
          borderRadius: BorderRadius.circular(8),
        ),
        child: ListTile(
          title: Text(text, style: TextStyle(color: Colors.white)),
          trailing: IconButton(
            icon: Icon(Icons.copy, color: Colors.grey),
            onPressed: () {
              Clipboard.setData(ClipboardData(text: text.split(": ").last));

              // –ò—Å–ø–æ–ª—å–∑—É–µ–º ScaffoldMessenger –¥–ª—è –ø–æ–∫–∞–∑–∞ Snackbar
              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: ${text.split(": ").last}"),
                  duration: Duration(seconds: 2),
                  behavior: SnackBarBehavior.floating,
                  backgroundColor: Colors.grey[800],
                ),
              );
            },
          ),
        ),
      ),
    );
  }

  void showNetworkCacheDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          backgroundColor: Colors.black87,
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15)),
          title: Text(
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏ –∏ –∫—ç—à–∞",
            style: TextStyle(color: Colors.white),
          ),
          content: SingleChildScrollView(
            child: SizedBox(
              width: 300, // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É
              child: Column(
                mainAxisSize: MainAxisSize.min, // –ó–∞–ø—Ä–µ—â–∞–µ–º Column –∑–∞–Ω–∏–º–∞—Ç—å –≤—Å—é –≤—ã—Å–æ—Ç—É
                children: [
                  Text(
                    "Ecoalmaty –∑–∞–Ω–∏–º–∞–µ—Ç 2% –º–µ—Å—Ç–∞ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.",
                    style: TextStyle(color: Colors.grey),
                    textAlign: TextAlign.center,
                  ),
                  SizedBox(height: 10),
                  SizedBox(
                    width: 200, // –Ø–≤–Ω–æ –∑–∞–¥–∞–µ–º —à–∏—Ä–∏–Ω—É –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
                    child: ProgressBar(progress: 0.02),
                  ),
                  SizedBox(height: 10),
                  Row(
                    children: [
                      Icon(Icons.refresh, color: Colors.green),
                      SizedBox(width: 10),
                      Expanded(
                        child: Text(
                          "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ (–∫—ç—à)",
                          style: TextStyle(color: Colors.white),
                        ),
                      ),
                      Text("2,7 GB", style: TextStyle(color: Colors.white)),
                    ],
                  ),
                  SizedBox(height: 10),
                  Row(
                    children: [
                      Icon(Icons.bar_chart, color: Colors.green),
                      SizedBox(width: 10),
                      Expanded(
                        child: Text(
                          "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞—Ñ–∏–∫–∞ –∑–∞ –º–µ—Å.",
                          style: TextStyle(color: Colors.white),
                        ),
                      ),
                      Text("112,4 GB", style: TextStyle(color: Colors.white)),
                    ],
                  ),
                ],
              ),
            ),
          ),
          actions: [
            TextButton(
              style: TextButton.styleFrom(
                backgroundColor: Colors.grey[800],
                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
              ),
              onPressed: () => Navigator.of(context).pop(),
              child: Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                child: Text("–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à", style: TextStyle(color: Colors.white)),
              ),
            ),
          ],
        );
      },
    );
  }

}

class ProgressBar extends StatelessWidget {
  final double progress; // –ó–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 0.0 –¥–æ 1.0

  const ProgressBar({Key? key, required this.progress}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return LayoutBuilder(
      builder: (context, constraints) {
        double maxWidth = constraints.maxWidth;
        double barWidth = maxWidth * progress;

        return Stack(
          children: [
            Container(
              height: 10,
              width: maxWidth,
              decoration: BoxDecoration(
                color: Colors.grey[700],
                borderRadius: BorderRadius.circular(5),
              ),
            ),
            Container(
              height: 10,
              width: barWidth,
              decoration: BoxDecoration(
                color: Colors.green,
                borderRadius: BorderRadius.circular(5),
              ),
            ),
          ],
        );
      },
    );
  }
}